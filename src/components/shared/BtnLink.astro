---
export interface Props{
    href:string,
    text:string,
    className?:string,
    variant:"primary"|"secondary" | "thirdy"|"fourthy"
}

const {href, text,className, variant} = Astro.props

const getThemeStyle = (variant:"primary"|"secondary"|"thirdy"|"fourthy") => {
    if (variant === "primary") {
        return "bg-primary border-transparent relative after:bg-[#172554] hover:border-[#172554]"
    }
    else if (variant === "thirdy") {
        return "bg-emerald-500 border-transparent relative after:bg-[#172554] hover:border-[#172554] rounded"
    }
    else if (variant === "fourthy"){
        return "bg-rose-500 border-transparent relative after:bg-[#172554] hover:border-[#172554] rounded"
    }
    else {
        return "text-primary"
    }
}

const getTextColor = (variant:"primary"|"secondary"|"thirdy") =>{
    if (variant === "primary") {
        return "text-white"
    }
    else if (variant === "thirdy"){
        return "text-white"
    }
    return "text-primary"
}


---

<a href={href} class={`px-6 py-3 rounded-md  outline-none relative overflow-hidden border duration-300 ease-linear
                    after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0 after:bg-[#172554]
                    ${getThemeStyle(variant)} hover:after:opacity-100 hover:after:scale-[2.5] ${className}`} target="_blank">
    <span class={`relative ${getTextColor(variant)} z-10`}>
        {text}
    </span>
</a>